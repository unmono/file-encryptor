class p extends EventTarget{algorithm="AES-GCM";keyLength=256;key;iv;async encrypt(e,t){if(!this.ready())throw new Error("Encryptor is not initialized");return await window.crypto.subtle.encrypt({name:this.algorithm,iv:this.iv,additionalData:t},this.key,e)}async decrypt(e,t){if(!this.ready())throw new Error("Encryptor is not initialized");return await window.crypto.subtle.decrypt({name:this.algorithm,iv:this.iv,additionalData:t},this.key,e)}ready(){return!(!this.key||!this.iv)}async generateJWK(){let e=await window.crypto.subtle.generateKey({name:this.algorithm,length:this.keyLength},!0,["encrypt","decrypt"]),t=window.crypto.getRandomValues(new Uint8Array(12)),n=await window.crypto.subtle.exportKey("jwk",e);return n.initv=this.base64iv(t),[n]}async readJWK(e){if(!e.initv)throw new TypeError("There is no valid initialization vector in key file");this.iv=this.ivFromB64(e.initv),this.key=await window.crypto.subtle.importKey("jwk",e,{name:this.algorithm},!0,["encrypt","decrypt"]),this.dispatchEvent(new Event("change"))}base64iv(e){let t="";for(let n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return window.btoa(t)}ivFromB64(e){let t=window.atob(e),n=new Uint8Array(12);for(let i=0;i<t.length;i++)n[i]=t.charCodeAt(i);return n}dropKeys(){this.key=void 0,this.iv=void 0,this.dispatchEvent(new Event("change"))}}class r{classList=[];children=[];element;text;constructor(e,t,n){if(this.element=document.createElement(e),this.classList=t??[],n)Object.assign(this.element,n)}s(...e){return e.forEach((t)=>{if(typeof t=="string"){if(e.length>1)throw new Error("single string or multimple children");this.text=t;return}this.children.push(t)}),this}render(){if(this.element.classList.add(...this.classList),this.text)this.element.innerHTML=this.text;else this.children.forEach((e)=>{this.element.appendChild(e.render())});return this.element}}function s(e,t=[],n={}){return new r(e,t,n)}class c extends Error{constructor(e){super(e);this.name="UserError"}}class a extends Error{constructor(e){super(e);this.name="ApplicationError"}}class u extends EventTarget{fileInput;keyInput;authInput;encryptButton;decryptButton;generateKeyButton;clearButton;rootElement;encryptor;f;constructor(e,t,n,i,o,l,h,b,k){super();this.encryptor=e,this.fileInput=t,this.keyInput=n,this.authInput=i,this.encryptButton=o,this.decryptButton=l,this.generateKeyButton=h,this.clearButton=b,this.rootElement=k,this.fileInput.element.type="file",this.keyInput.element.type="file",this.encryptButton.element.disabled=!0,this.decryptButton.element.disabled=!0,this.encryptor.addEventListener("change",this.updateButtonsStates.bind(this)),this.generateKeyButton.element.addEventListener("click",this.generateKey.bind(this)),this.clearButton.element.addEventListener("click",this.clear.bind(this)),this.keyInput.element.addEventListener("change",this.sourceKey.bind(this)),this.fileInput.element.addEventListener("change",this.sourceFile.bind(this)),this.encryptButton.element.addEventListener("click",this.encryptFile.bind(this)),this.decryptButton.element.addEventListener("click",this.decryptFile.bind(this))}async encryptFile(){if(!this.encryptor.ready())throw new a("Encryptor is not initialized");if(!this.f)throw new c("No data uploaded");let e=await this.f.arrayBuffer(),t=void 0;if(this.authInput.element.value)t=new TextEncoder().encode(this.authInput.element.value).buffer;let n=await this.encryptor.encrypt(e,t),i=new File([n],this.f.name);this.downloadFile(i)}async decryptFile(){if(!this.encryptor.ready())throw new a("Encryptor is not initialized");if(!this.f)throw new c("No data uploaded");let e=await this.f.arrayBuffer(),t=void 0;if(this.authInput.element.value)t=new TextEncoder().encode(this.authInput.element.value).buffer;let n=await this.encryptor.decrypt(e,t),i=new File([n],this.f.name);this.downloadFile(i)}async generateKey(){(await this.encryptor.generateJWK()).forEach((t)=>{let n=JSON.stringify(t);if(!n)throw new a("Error exporting the key");let i=new File([n],`${Date.now()}.json`);this.downloadFile(i)})}downloadFile(e){let t=document.createElement("a");t.href=URL.createObjectURL(e),t.download=e.name,t.click()}clear(){this.keyInput.element.value="",this.fileInput.element.value="";let e=new Event("change");this.keyInput.element.dispatchEvent(e),this.fileInput.element.dispatchEvent(e)}sourceKey(e){let t=e.target.files;if(!t||!t.length)this.encryptor.dropKeys();else{let n=new FileReader;n.addEventListener("load",async(i)=>{let o=i.target.result,l={};try{l=JSON.parse(o)}catch(h){throw this.keyInput.element.value="",this.keyInput.element.dispatchEvent(new Event("change")),new a("Error reading a key file while parsing json file")}await this.encryptor.readJWK(l)}),n.addEventListener("error",()=>{throw this.keyInput.element.value="",this.keyInput.element.dispatchEvent(new Event("change")),new a("Error reading a key file")}),n.readAsText(t[0])}}sourceFile(e){let t=e.target.files;if(!t)this.f=void 0;else this.f=t[0];this.updateButtonsStates()}updateButtonsStates(){this.encryptButton.element.disabled=this.decryptButton.element.disabled=!(this.f&&this.encryptor.ready())}init(){document.body.appendChild(this.rootElement.element),this.rootElement.render()}}var y=new r("div",["root"]),B=new r("div",["dropZone","fx-c","gap-10"]),d=new r("button"),f=new r("button"),m=new r("button"),E=new r("button"),w=new r("input",["fx-2"],{id:"fileInput"}),v=new r("input",["fx-2"],{id:"keyInput"}),g=new r("input",["fx-2"],{id:"vectorInput"});function A(){y.s(B.s(s("div",["fx-r"]).s(s("label",["w-30"],{for:"fileInput"}).s("File to encrypt"),w.s()),s("div",["fx-r"]).s(s("label",["w-30"],{for:"keyInput"}).s("Encryption key"),v.s()),s("div",["fx-r"]).s(s("label",["w-30"],{for:"vectorInput"}).s("Auth data"),g.s()),d.s("Encrypt"),f.s("Decrypt"),m.s("Generate encryption key"),E.s("Clear"))),new u(new p,w,v,g,d,f,m,E,y).init()}window.onload=A;
